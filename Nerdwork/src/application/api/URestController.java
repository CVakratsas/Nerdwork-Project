package application.api;
import java.io.IOException;
import java.util.ArrayList;
import java.util.HashMap;

import org.json.simple.JSONArray;
import org.json.simple.JSONObject;
import org.json.simple.parser.JSONParser;
import org.json.simple.parser.ParseException;

public class URestController {
     private String userId;
     private String username;
     private URequestComponent requestComponent;
     
     public URestController() {
    	 requestComponent = new URequestComponent();
     }
     /*
      Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Ï„Î·Î½ ÏƒÏ?Î½Î´ÎµÏƒÎ· Ï„Î¿Ï… Ï‡Ï?Î®ÏƒÏ„Î· Î¼Îµ Ï„Î¿ API, ÎµÏ€Î¹ÏƒÏ„Ï?Î­Ï†ÎµÎ¹ Î²Î±ÏƒÎ¹ÎºÎµÏ‚ Ï€Î»Î·Ï?Î¿Ï†Î¿Ï?Î¯ÎµÏ‚ ÏƒÏ‡ÎµÏ„Î¹ÎºÎ¬ Î¼Îµ Ï„Î¿Î½ Ï‡Ï?Î®ÏƒÏ„Î·
      FLoginResponse Î³Î¹Î± Ï€ÎµÏ?Î¹ÏƒÏƒÏ?Ï„ÎµÏ?ÎµÏ‚ Ï€Î»Î·Ï?Î¿Ï†Î¿Ï?Î¯ÎµÏ‚.
      Î‘Ï€Î±Î¹Ï„ÎµÎ¯Ï„Î±Î¹ Login Î³Î¹Î± Ï„Î·Î½ ÎºÎ»Î®ÏƒÎ· Ï„Ï‰Î½ Ï…Ï€Ï?Î»Î¿Î¹Ï€Ï‰Î½ ÏƒÏ…Î½Î±Ï?Ï„Î®ÏƒÎµÏ‰Î½
      */
     public FLoginResponse doLogin(String username, String password) throws IOException, ParseException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("username", username);
	     obj.put("password", password);
    	 FRestResponse r = requestComponent.Post("/api/auth/login/", obj);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 userId = (String) data.get("id");
    		 this.username = username;
    		 return new FLoginResponse(true, userId, (String)data.get("displayName"), username, ((Number)data.get("accountType")).intValue(), ((Number)data.get("associatedProfessor")).intValue());
    	 }
    	 return new FLoginResponse(false);
     }
     
     public ArrayList<FProfessorsResponse> getAllProfessors() throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/professors");
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 JSONArray arrayData = (JSONArray)data.get("triggerResults");
    		 ArrayList<FProfessorsResponse> outResponse = new ArrayList<FProfessorsResponse>();
    		 for(int i = 0; i<arrayData.size(); i++) {
    			 JSONObject tempData = (JSONObject)arrayData.get(i);
    			 outResponse.add(new FProfessorsResponse(((Number)tempData.get("id")).intValue(), (String) tempData.get("name"), (String) tempData.get("phone"), (String) tempData.get("email"), (String) tempData.get("profilePhoto"), (String) tempData.get("office"), ((Number)tempData.get("rating")).floatValue()));
    		 }
    		 return outResponse;
    	 }
    	 return new ArrayList<FProfessorsResponse>();
     }
     
     public float getProfessorRating(int professorId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/professors/rating?professorId="+professorId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 return ((Number)(data.get("rating"))).floatValue();
    	 }
    	 return 0;
     }
     
     public int getMyProfessorRating(int professorId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/professors/rating?professorId="+professorId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 return ((Number)(data.get("myRating"))).intValue();
    	 }
    	 return -1;
     }
     
     public boolean setProfessorRating(int rating, int professorId) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("rating", rating);
    	 obj.put("professorId", professorId);
    	 FRestResponse r = requestComponent.Post("/api/professors/rating/", obj);
    	 return r.statusCode==200;
     }
     
     /*
       Î•Ï€Î¹ÏƒÏ„Ï?Î­Ï†ÎµÎ¹ Î¼Î¹Î± Î»Î¯ÏƒÏ„Î± Î¼Îµ Ï?Î»Î± Ï„Î± Î¼Î±Î¸Î®Î¼Î±Ï„Î± Ï€Î¿Ï… ÎµÎ¯Î½Î±Î¹ ÎºÎ±Ï„Î±Ï‡Ï‰Ï?Î·Î¼Î­Î½Î± ÏƒÏ„Î·Î½ Î²Î¬ÏƒÎ· Î´ÎµÎ´Î¿Î¼Î­Î½Ï‰Î½.
      */
     
     public ArrayList<FSubjectsResponse> getAllSubjects() throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/subjects");
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 JSONArray arrayData = (JSONArray)data.get("triggerResults");
    		 ArrayList<FSubjectsResponse> outResponse = new ArrayList<FSubjectsResponse>();
    		 for(int i = 0; i<arrayData.size(); i++) {
    			 JSONObject tempData = (JSONObject)arrayData.get(i);
    			 ArrayList<String> listdata = new ArrayList<String>();     
    			 JSONArray jArray = (JSONArray)tempData.get("associatedProfessors"); 
    			 if (jArray != null) { 
    			    for (int j=0;j<jArray.size();j++){ 
    			     listdata.add((String) jArray.get(j));
    			    } 
    			 }
    			 outResponse.add(new FSubjectsResponse(((String)tempData.get("id")), (String) tempData.get("name"), listdata, ((Number)tempData.get("rating")).floatValue(), ((Number)tempData.get("semester")).intValue()));
    		 }
    		 return outResponse; 
    	 }
    	 return new ArrayList<FSubjectsResponse>();
     }
     
     /*
        Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î±Î¾Î¹Î¿Î»Ï?Î³Î·ÏƒÎ· Î¼Î±Î¸Î®Î¼Î±Ï„Î¿Ï‚, Î¼Ï€Î¿Ï?ÎµÎ¹ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î¼Ï?Î½Î¿ Î¼Î¹Î± Ï†Î¿Ï?Î¬ Î±Î½Î± Î¼Î¬Î¸Î·Î¼Î±.
        Î’Î±Î¸Î¼Î¿Î»Î¿Î³Î¹Î± Ï€Ï?ÎµÏ€ÎµÎ¹ Î½Î± ÎµÎ¹Î½Î±Î¹ Î±Ï€Î¿ 1-5
      */
     
     public boolean setSubjectRating(int rating, String subjectId) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("rating", rating);
    	 obj.put("subjectId", subjectId);
    	 FRestResponse r = requestComponent.Post("/api/subjects/rating/", obj);
    	 return r.statusCode==200;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· Î²Î±Î¸Î¼Î¿Î»Î¿Î³Î¯Î±Ï‚ ÎµÎ½Ï?Ï‚ Î¼Î±Î¸Î®Î¼Î±Ï„Î¿Ï‚
   */
     
     public float getSubjectRating(String subjectId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/subjects/rating?subjectId="+subjectId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 return ((Number)(data.get("rating"))).floatValue();
    	 }
    	 return 0;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· Î²Î±Î¸Î¼Î¿Î»Î¿Î³Î¯Î±Ï‚ Ï€Î¿Ï… ÎµÏ‡ÎµÎ¹ Î¸ÎµÏƒÎµÎ¹ Î¿ Ï‡Ï?Î·ÏƒÏ„Î·Ï‚ Î³Î¹Î± ÎµÎ½Î± Î¼Î±Î¸Î·Î¼Î±
     -1 ÏƒÎµ Ï€ÎµÏ?Î¹Ï€Ï„Ï‰ÏƒÎ· Ï€Î¿Ï… Î´ÎµÎ½ ÎµÏ‡ÎµÎ¹ Î²Î±Î¸Î¼Î¿Î»Î¿Î³Î·ÏƒÎµÎ¹ Ï„Î¿ Î¼Î±Î¸Î·Î¼Î±.
   */
     
     public int getMySubjectRating(String subjectId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/subjects/rating?subjectId="+subjectId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 return ((Number)(data.get("myRating"))).intValue();
    	 }
    	 return -1;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· ÎµÎ³Î³ÎµÎ³Ï?Î±Î¼ÎµÎ½Ï‰Î½ Î¼Î±Î¸Î·Î¼Î±Ï„Ï‰Î½, ÎµÏ€Î¹ÏƒÏ„Ï?ÎµÏ†ÎµÎ¹ Î¼Î¹Î± Î»Î¹ÏƒÏ„Î± Î¼Îµ Ï„Î± id Ï„Ï‰Î½ Î¼Î±Î¸Î·Î¼Î±Ï„Ï‰Î½.
   */
     
     public ArrayList<String> getEnrolledSubjects() throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/subjects/enrollments");
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 JSONArray jArray = (JSONArray)data.get("enrollments");
    		 if(jArray==null) {
    			 return new ArrayList<String>();
    		 }
    		 ArrayList<String> listdata = new ArrayList<String>();
    		 if (jArray != null) { 
 			    for (int j=0;j<jArray.size();j++){ 
 			        listdata.add((String) jArray.get(j));
 			    } 
 			 }
    		 return listdata; 
    	 }
    	 return new ArrayList<String>();
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± ÎµÎ³Î³Ï?Î±Ï†Î® ÏƒÎµ Î¼Î±Î¸Î·Î¼Î±, Î¼ÎµÎ³Î¹ÏƒÏ„Î¿ 10 Î¼Î±Î¸Î®Î¼Î±Ï„Î±
   */
     
     public boolean enrollSubject(String subjectId) throws IOException{
    	 JSONObject obj = new JSONObject();
    	 obj.put("subjectId", subjectId);
    	 FRestResponse r = requestComponent.Post("/api/subjects/enrollments/enroll/", obj);
    	 return r.statusCode==200;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î±Ï€ÎµÎ³Î³Ï?Î±Ï†Î® ÏƒÎµ Î¼Î±Î¸Î·Î¼Î±, Î¼ÎµÎ³Î¹ÏƒÏ„Î¿ 10 Î¼Î±Î¸Î®Î¼Î±Ï„Î±
   */
     
     public boolean disenrollSubject(String subjectId) throws IOException{
    	 JSONObject obj = new JSONObject();
    	 obj.put("subjectId", subjectId);
    	 FRestResponse r = requestComponent.Post("/api/subjects/enrollments/disenroll/", obj);
    	 return r.statusCode==200;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· Î´Î¹Î±Î¸ÎµÏƒÎ¹Î¼Ï‰Î½ Î·Î¼ÎµÏ?Î¿Î¼Î·Î½Î¹Ï‰Î½ Î³Î¹Î± Ï?Î±Î½Ï„ÎµÎ²Î¿Ï… ÎµÎ½Î¿Ï‚ ÎºÎ±Î¸Î·Î³Î·Ï„Î·.
     Î”ÎµÎ¹Ï„Îµ FAvailabilityResponse
   */
     
     public FAvailabilityResponse getAvailabilityDates(int professorId) throws IOException, ParseException {
    	 FRestResponse r = requestComponent.Get("/api/appointments/availability?professorId="+professorId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 JSONArray arrayData = (JSONArray)data.get("availability");
    		 ArrayList<HashMap<String, Integer>> dates = new ArrayList<HashMap<String, Integer>>();
    		 for(int i = 0; i<arrayData.size(); i++) {
    			 JSONObject tempData = (JSONObject)arrayData.get(i);
    			 HashMap<String, Integer> dateElement = new HashMap<String, Integer>();
    			 dateElement.put("day", ((Number)tempData.get("day")).intValue());
    			 dateElement.put("startHour", ((Number)tempData.get("startHour")).intValue());
    			 dateElement.put("endHour", ((Number)tempData.get("endHour")).intValue());
    			 dates.add(dateElement);
    		 }
    		 return new FAvailabilityResponse(true, dates);
    	 }
    	 return new FAvailabilityResponse(false);
     }
     
     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· Î·Î´Î· ÎºÎ»ÎµÎ¹ÏƒÎ¼ÎµÎ½Ï‰Î½ Ï?Î±Î½Ï„ÎµÎ²Î¿Ï… ÎµÎ½Î¿Ï‚ ÎºÎ±Î¸Î·Î³Î·Ï„Î·
      * Î— Î¼Î¿Ï?Ï†Î· ÎµÎ¹Î½Î±Î¹ timestamp.
      */
     
     public ArrayList<Integer> getBookedTimestamps(int professorId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/appointments/availability?professorId="+professorId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 JSONArray arrayData = (JSONArray)data.get("bookedTimestamps");
    		 ArrayList<Integer> booked = new ArrayList<Integer>();
    		 for(int i = 0; i<arrayData.size(); i++) {
    			 booked.add(((Number)arrayData.get(i)).intValue());
    		 }
    		 return booked;
    	 }
    	 return new ArrayList<Integer>();
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± ÎµÎ½Î·Î¼ÎµÏ?Ï‰ÏƒÎ· Ï„Ï‰Î½ Î´Î¹Î±Î¸ÎµÏƒÎ¹Î¼Ï‰Î½ Î·Î¼ÎµÏ?Î¿Î¼Î·Î½Î¹Ï‰Î½ Ï„Î¿Ï… ÎºÎ±Î¸Î·Î³Î·Ï„Î·.
     Î?Ï€Î¿Ï?ÎµÎ¹ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¹ Î¼Î¿Î½Î¿ Î±Î½ accountType = 1, Î´ÎµÎ¹Ï„Îµ FLoginResponse.
   */
     
     public boolean setAvailabilityDates(int day, int startHour, int endHour) throws IOException{
    	 JSONObject obj = new JSONObject();
    	 obj.put("day", day);
    	 obj.put("startHour", startHour);
    	 obj.put("endHour", endHour);
    	 FRestResponse r = requestComponent.Post("/api/appointments/availability/", obj);
    	 return r.statusCode==200;
     }
     
     public ArrayList<FAppointmentsResponse> getMyAppointments() throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/appointments");
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 JSONArray arrayData = (JSONArray)data.get("triggerResults");
    		 if(arrayData==null) {
    			 return new ArrayList<FAppointmentsResponse>();
    		 }
    		 ArrayList<FAppointmentsResponse> outResponse = new ArrayList<FAppointmentsResponse>();
    		 for(int i = 0; i<arrayData.size(); i++) {
    			 JSONObject tempData = (JSONObject)arrayData.get(i);
    			 outResponse.add(new FAppointmentsResponse(((Number)tempData.get("appointmentId")).intValue(), (String) tempData.get("studentId"), ((Number) tempData.get("professorId")).intValue(), ((Number) tempData.get("date")).intValue(), ((Number) tempData.get("status")).intValue(), (String) tempData.get("created_at")));
    		 }
    		 return outResponse;
    	 }
    	 return new ArrayList<FAppointmentsResponse>();
     }
     
     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î±Ï€Î¿Î´Î¿Ï‡Î® Ï?Î±Î½Ï„ÎµÎ²Î¿Ï?, Î¼Ï€Î¿Ï?ÎµÎ¯ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î¼Ï?Î½Î¿ Î±Ï€Î¿ ÎºÎ±Î¸Î·Î³Î·Ï„Î®.
      * Î´ÎµÎ½ Î¼Ï€Î¿Ï?ÎµÎ¯ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î±Î½ Ï„Î¿ Ï?Î±Î½Ï„ÎµÎ²Î¿Ï? ÎµÎ¯Î½Î±Î¹ Î±ÎºÏ…Ï?Ï‰Î¼Î­Î½Î¿ Î® Î·Î´Î· ÎµÏ€Î¹Î²ÎµÎ²Î±Î¹Ï‰Î¼Î­Î½Î¿
      */
     
     public boolean acceptAppointment(int appointmentId) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("appointmentId", appointmentId);
    	 FRestResponse r = requestComponent.Post("/api/appointments/accept/", obj);
    	 return r.statusCode==200;
     }

     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î±ÎºÏ?Ï?Ï‰ÏƒÎ· Ï?Î±Î½Ï„ÎµÎ²Î¿Ï?, Î¼Ï€Î¿Ï?ÎµÎ¯ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î±Î½ Î¿ Ï‡Ï?Î®ÏƒÏ„Î·Ï‚ Î±Î½Î®ÎºÎµÎ¹ ÏƒÎµ Î±Ï…Ï„Ï? Ï„Î¿ Ï?Î±Î½Ï„ÎµÎ²Î¿Ï?.
      * Î´ÎµÎ½ Î¼Ï€Î¿Ï?ÎµÎ¯ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î±Î½ Ï„Î¿ Ï?Î±Î½Ï„ÎµÎ²Î¿Ï? ÎµÎ¯Î½Î±Î¹ Î±ÎºÏ…Ï?Ï‰Î¼Î­Î½Î¿.
      */
     
     public boolean cancelAppointment(int appointmentId) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("appointmentId", appointmentId);
    	 FRestResponse r = requestComponent.Post("/api/appointments/cancel/", obj);
    	 return r.statusCode==200;
     }
     
     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± ÎºÎ»ÎµÎ¯ÏƒÎ¹Î¼Î¿ Ï?Î±Î½Ï„ÎµÎ²Î¿Ï?, Î¼Ï€Î¿Ï?ÎµÎ¯ Î½Î± ÎºÎ»Î·Î¸ÎµÎ¯ Î±Î½ Î¿ Ï‡Ï?Î®ÏƒÏ„Î·Ï‚ ÎµÎ¯Î½Î±Î¹ Ï†Î¿Î¹Ï„Î·Ï„Î®Ï‚
      */
     
     public boolean bookAppointment(int professorId, int dateTimestamp) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("professorId", professorId);
    	 obj.put("timestamp", dateTimestamp);
    	 FRestResponse r = requestComponent.Post("/api/appointments/book/", obj);
    	 return r.statusCode==200;
     }
     
     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î»Î·Ï?Î· Î²Î±ÏƒÎ¹ÎºÏ?Î½ Ï€Î»Î·Ï?Î¿Ï†Î¿Ï?Î¹Ï?Î½ ÎµÎ½Ï?Ï‚ Ï‡Ï?Î®ÏƒÏ„Î·
      * Î Î¿Î»Ï… Ï‡Ï?Î®ÏƒÎ¹Î¼Î· Î³Î¹Î± Ï„Î± Ï?Î±Î½Ï„ÎµÎ²Î¿Ï….
      */
     
     public FUserInformationResponse getUserProfile(String userId) throws IOException, ParseException{
    	 FRestResponse r = requestComponent.Get("/api/profile?userId="+userId);
    	 if(r.statusCode==200) {
    		 JSONParser parser = new JSONParser();
    		 JSONObject data = (JSONObject) parser.parse(r.responseContent);
    		 data = (JSONObject)data.get("triggerResults");
    		 return new FUserInformationResponse(true, (String)data.get("displayName"), (String)data.get("bio"), (String)data.get("email"));
    	 }
    	 return new FUserInformationResponse(false);
     }
     
     /*
      * Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± Î½Î± Î¸ÎµÏƒÎ¿Ï…Î¼Îµ Î½ÎµÎ¿ display name
      */
     
     public boolean setDisplayName(String newDisplayName) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("displayName", newDisplayName);
    	 FRestResponse r = requestComponent.Put("/api/profile/displayName/", obj);
    	 System.out.println(r.responseContent);
    	 return r.statusCode==200;
     }
     
     public boolean setPassword(String oldPassword, String newPassword) throws IOException {
    	 JSONObject obj = new JSONObject();
    	 obj.put("oldPassword", oldPassword);
    	 obj.put("newPassword", newPassword);
    	 FRestResponse r = requestComponent.Post("/api/auth/password/", obj);
    	 return r.statusCode==200;
     }
     
     /*
     Î£Ï…Î½Î¬Ï?Ï„Î·ÏƒÎ· Î³Î¹Î± ÎµÎ³Î³Ï?Î±Ï†Î· Î½ÎµÎ¿Ï… Ï‡Ï?Î·ÏƒÏ„Î·
   */
          
     public boolean doRegister(String username, String password, String displayName, String email) throws IOException{
    	 JSONObject obj = new JSONObject();
    	 obj.put("username", username);
	     obj.put("password", password);
	     obj.put("displayName", displayName);
	     obj.put("email", email);
    	 FRestResponse r = requestComponent.Post("/api/auth/register/", obj);
    	 return r.statusCode==200;
     }
}
